{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/aditya/newport/portfolionew/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19,_templateObject20,_templateObject21,_templateObject22,_templateObject23,_templateObject24,_templateObject25,_templateObject26,_templateObject27,_templateObject28,_templateObject29,_templateObject30,_templateObject31;import React,{useState,useRef,useEffect}from'react';import{createPortal}from'react-dom';import styled,{keyframes,createGlobalStyle,css}from'styled-components';// Global styles for the chatbot\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GlobalStyle=createGlobalStyle(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  * {\\n    box-sizing: border-box;\\n  }\\n\"])));// Animations\nconst fadeIn=keyframes(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  from { opacity: 0; transform: translateY(10px); }\\n  to { opacity: 1; transform: translateY(0); }\\n\"])));const bounce=keyframes(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  0%, 20%, 53%, 80%, 100% { transform: translate3d(0,0,0); }\\n  40%, 43% { transform: translate3d(0, -8px, 0); }\\n  70% { transform: translate3d(0, -4px, 0); }\\n  90% { transform: translate3d(0, -2px, 0); }\\n\"])));const typing=keyframes(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  0% { transform: translateX(0px); }\\n  50% { transform: translateX(10px); }\\n  100% { transform: translateX(0px); }\\n\"])));// Main container - can be positioned anywhere on a website\nconst ChatWidget=styled.div.withConfig({shouldForwardProp:prop=>prop!=='isOpen'})(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  position: fixed !important;\\n  bottom: 20px !important;\\n  right: 20px !important;\\n  width: \",\";\\n  height: \",\";\\n  background: #ffffff;\\n  border-radius: \",\";\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\\n  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n  z-index: 999999 !important;\\n  top: auto !important;\\n  left: auto !important;\\n  transform: none !important;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  opacity: 1 !important;\\n  visibility: visible !important;\\n  overflow: visible !important;\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  backdrop-filter: blur(20px);\\n  display: flex;\\n  flex-direction: column;\\n  transform: translateZ(0) !important;\\n  will-change: transform;\\n  isolation: isolate;\\n  clip: unset !important;\\n  clip-path: none !important;\\n  contain: none !important;\\n  max-width: calc(100vw - 40px) !important;\\n  max-height: calc(100vh - 40px) !important;\\n  pointer-events: auto !important;\\n\\n  \",\"\\n\\n  @media (max-width: 768px) {\\n    width: \",\";\\n    max-width: 350px;\\n    height: \",\";\\n    max-height: 500px;\\n    bottom: 15px;\\n    right: 15px;\\n    left: \",\";\\n  }\\n\\n  @media (max-width: 480px) {\\n    width: \",\";\\n    height: \",\";\\n    bottom: 10px;\\n    right: 10px;\\n    left: \",\";\\n  }\\n\"])),props=>props.isOpen?'400px':'60px',props=>props.isOpen?'600px':'60px',props=>props.isOpen?'20px':'50%',props=>props.isOpen&&css(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    box-shadow: \\n      0 8px 32px rgba(0, 0, 0, 0.12),\\n      0 0 0 1px rgba(99, 102, 241, 0.1),\\n      inset 0 1px 0 rgba(255, 255, 255, 0.1);\\n  \"]))),props=>props.isOpen?'calc(100vw - 30px)':'60px',props=>props.isOpen?'calc(100vh - 100px)':'60px',props=>props.isOpen?'15px':'auto',props=>props.isOpen?'calc(100vw - 20px)':'50px',props=>props.isOpen?'calc(100vh - 80px)':'50px',props=>props.isOpen?'10px':'auto');// Chat toggle button\nconst ChatToggle=styled.button.withConfig({shouldForwardProp:prop=>prop!=='isOpen'})(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: \",\";\\n  right: \",\";\\n  width: \",\";\\n  height: \",\";\\n  border: none;\\n  border-radius: 50%;\\n  background: linear-gradient(135deg, #6366f1, #8b5cf6);\\n  color: white;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: \",\";\\n  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n  z-index: 10000;\\n  box-shadow: 0 4px 16px rgba(99, 102, 241, 0.4);\\n\\n  &:hover {\\n    background: linear-gradient(135deg, #5855f7, #7c3aed);\\n    transform: scale(1.1);\\n    box-shadow: 0 6px 20px rgba(99, 102, 241, 0.5);\\n  }\\n\\n  &:active {\\n    transform: scale(0.95);\\n  }\\n\\n  \",\"\\n\"])),props=>props.isOpen?'15px':'10px',props=>props.isOpen?'15px':'10px',props=>props.isOpen?'30px':'40px',props=>props.isOpen?'30px':'40px',props=>props.isOpen?'18px':'24px',props=>!props.isOpen&&css(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n    animation: \",\" 2s infinite;\\n    &:hover {\\n      animation-play-state: paused;\\n    }\\n  \"])),bounce));// Chat header\nconst ChatHeader=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #6366f1, #8b5cf6);\\n  color: white;\\n  padding: 20px 20px 20px 20px;\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n  margin-top: 45px;\\n  position: relative;\\n  flex-shrink: 0;\\n  \\n  &::before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: linear-gradient(135deg, rgba(255,255,255,0.1), rgba(255,255,255,0));\\n    pointer-events: none;\\n  }\\n\"])));const AvatarContainer=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  width: 45px;\\n  height: 45px;\\n  border-radius: 50%;\\n  background: rgba(255, 255, 255, 0.2);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 20px;\\n  backdrop-filter: blur(10px);\\n  border: 2px solid rgba(255, 255, 255, 0.3);\\n  position: relative;\\n  z-index: 1;\\n\"])));const HeaderInfo=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  position: relative;\\n  z-index: 1;\\n\"])));const BotName=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n  font-size: 16px;\\n  margin-bottom: 2px;\\n\"])));const BotStatus=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  opacity: 0.9;\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n\"])));const StatusDot=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: #10b981;\\n  animation: pulse 2s infinite;\\n  \\n  @keyframes pulse {\\n    0% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7); }\\n    70% { box-shadow: 0 0 0 10px rgba(16, 185, 129, 0); }\\n    100% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0); }\\n  }\\n\"])));// Messages container\nconst MessagesContainer=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 15px;\\n  overflow-y: auto;\\n  background: linear-gradient(135deg, #f8fafc, #f1f5f9);\\n  \\n  &::-webkit-scrollbar {\\n    width: 6px;\\n  }\\n  \\n  &::-webkit-scrollbar-track {\\n    background: rgba(0, 0, 0, 0.05);\\n    border-radius: 3px;\\n  }\\n  \\n  &::-webkit-scrollbar-thumb {\\n    background: rgba(99, 102, 241, 0.3);\\n    border-radius: 3px;\\n    \\n    &:hover {\\n      background: rgba(99, 102, 241, 0.5);\\n    }\\n  }\\n\"])));const MessageGroup=styled.div.withConfig({shouldForwardProp:prop=>prop!=='isUser'})(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: \",\";\\n  margin-bottom: 12px;\\n  animation: \",\" 0.3s ease;\\n\"])),props=>props.isUser?'flex-end':'flex-start',fadeIn);const MessageBubble=styled.div.withConfig({shouldForwardProp:prop=>prop!=='isUser'})(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  max-width: 75%;\\n  padding: 12px 16px;\\n  border-radius: 18px;\\n  font-size: 14px;\\n  line-height: 1.4;\\n  position: relative;\\n  word-wrap: break-word;\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  transition: all 0.2s ease;\\n\\n  \",\"\\n\\n  /* Chat bubble tail */\\n  &::before {\\n    content: '';\\n    position: absolute;\\n    width: 0;\\n    height: 0;\\n    border: 6px solid transparent;\\n    \\n    \",\"\\n  }\\n\\n  /* Hover effect for interactive feel */\\n  &:hover {\\n    transform: translateY(-1px);\\n    box-shadow: \",\";\\n  }\\n\"])),props=>props.isUser?css(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n        background: linear-gradient(135deg, #6366f1, #8b5cf6);\\n        color: white;\\n        box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);\\n      \"]))):css(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n        background: #ffffff;\\n        color: #374151;\\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\\n      \"]))),props=>props.isUser?css(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n        right: -6px;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        border-left-color: #6366f1;\\n      \"]))):css(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n        left: -6px;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        border-right-color: #ffffff;\\n      \"]))),props=>props.isUser?'0 6px 16px rgba(99, 102, 241, 0.3)':'0 4px 12px rgba(0, 0, 0, 0.12)');const MessageTime=styled.span(_templateObject20||(_templateObject20=_taggedTemplateLiteral([\"\\n  font-size: 11px;\\n  opacity: 0.6;\\n  margin-top: 4px;\\n  display: block;\\n\"])));// Typing indicator\nconst TypingIndicator=styled.div(_templateObject21||(_templateObject21=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  padding: 12px 16px;\\n  background: #ffffff;\\n  border-radius: 18px;\\n  max-width: 80px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\\n  border: 1px solid #e5e7eb;\\n  animation: \",\" 0.3s ease;\\n\"])),fadeIn);const TypingDot=styled.div.withConfig({shouldForwardProp:prop=>prop!=='delay'})(_templateObject22||(_templateObject22=_taggedTemplateLiteral([\"\\n  width: 6px;\\n  height: 6px;\\n  border-radius: 50%;\\n  background: #6b7280;\\n  animation: \",\" 1.4s infinite ease-in-out;\\n  animation-delay: \",\"ms;\\n\"])),typing,props=>props.delay);// Input area\nconst InputContainer=styled.div(_templateObject23||(_templateObject23=_taggedTemplateLiteral([\"\\n  padding: 15px 20px 20px;\\n  background: white;\\n  border-top: 1px solid #e5e7eb;\\n  flex-shrink: 0;\\n  position: relative;\\n\"])));const InputWrapper=styled.div(_templateObject24||(_templateObject24=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 8px;\\n  align-items: flex-end;\\n\"])));const MessageInput=styled.textarea(_templateObject25||(_templateObject25=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  border: 1px solid #d1d5db;\\n  border-radius: 20px;\\n  padding: 12px 16px;\\n  font-size: 14px;\\n  line-height: 1.4;\\n  resize: none;\\n  max-height: 80px;\\n  min-height: 44px;\\n  background: #f9fafb;\\n  transition: all 0.2s ease;\\n  font-family: inherit;\\n\\n  &:focus {\\n    outline: none;\\n    border-color: #6366f1;\\n    background: white;\\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\\n  }\\n\\n  &::placeholder {\\n    color: #9ca3af;\\n    font-style: italic;\\n  }\\n\"])));const SendButton=styled.button(_templateObject26||(_templateObject26=_taggedTemplateLiteral([\"\\n  width: 44px;\\n  height: 44px;\\n  border: none;\\n  border-radius: 50%;\\n  background: linear-gradient(135deg, #6366f1, #8b5cf6);\\n  color: white;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 18px;\\n  transition: all 0.2s ease;\\n  flex-shrink: 0;\\n  box-shadow: 0 2px 8px rgba(99, 102, 241, 0.3);\\n\\n  &:hover:not(:disabled) {\\n    background: linear-gradient(135deg, #5855f7, #7c3aed);\\n    transform: scale(1.05);\\n    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);\\n  }\\n\\n  &:active {\\n    transform: scale(0.95);\\n  }\\n\\n  &:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n    transform: none;\\n    box-shadow: 0 2px 8px rgba(99, 102, 241, 0.2);\\n  }\\n\"])));// Welcome message\nconst WelcomeMessage=styled.div(_templateObject27||(_templateObject27=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  padding: 20px;\\n  color: #6b7280;\\n  background: linear-gradient(135deg, rgba(99, 102, 241, 0.05), rgba(139, 92, 246, 0.05));\\n  border-radius: 15px;\\n  margin: 10px;\\n  border: 1px solid rgba(99, 102, 241, 0.1);\\n\"])));const WelcomeTitle=styled.h4(_templateObject28||(_templateObject28=_taggedTemplateLiteral([\"\\n  margin: 0 0 8px 0;\\n  color: #374151;\\n  font-size: 16px;\\n\"])));const WelcomeText=styled.p(_templateObject29||(_templateObject29=_taggedTemplateLiteral([\"\\n  margin: 0;\\n  font-size: 13px;\\n  line-height: 1.4;\\n\"])));const QuickActions=styled.div(_templateObject30||(_templateObject30=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 8px;\\n  margin-top: 12px;\\n\"])));const QuickActionButton=styled.button(_templateObject31||(_templateObject31=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #f8fafc, #e2e8f0);\\n  border: 1px solid #d1d5db;\\n  border-radius: 16px;\\n  padding: 8px 16px;\\n  font-size: 12px;\\n  color: #374151;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  font-weight: 500;\\n\\n  &:hover {\\n    background: linear-gradient(135deg, #6366f1, #8b5cf6);\\n    color: white;\\n    border-color: #6366f1;\\n    transform: translateY(-1px);\\n    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);\\n  }\\n\"])));// Portal container for the chat widget\nconst ChatbotPortal=_ref=>{let{children}=_ref;const[portalNode,setPortalNode]=useState(null);useEffect(()=>{// Create a new div element for the portal\nlet node=document.getElementById('chatbot-root');if(!node){node=document.createElement('div');node.id='chatbot-root';node.style.position='fixed';node.style.zIndex='999999';node.style.pointerEvents='none';node.style.top='0';node.style.left='0';node.style.width='100%';node.style.height='100%';node.style.overflow='visible';document.body.appendChild(node);}setPortalNode(node);// Clean up function\nreturn()=>{if(node&&node.parentNode){node.parentNode.removeChild(node);}};},[]);// Only render when we have a valid portal node\nreturn portalNode?/*#__PURE__*/createPortal(children,portalNode):null;};const EnhancedChatbot=()=>{const[isOpen,setIsOpen]=useState(false);const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const messagesEndRef=useRef(null);const inputRef=useRef(null);// Add welcome message when chatbot first opens\nuseEffect(()=>{if(isOpen&&messages.length===0){const welcomeMessage={id:'welcome',text:\"Hi there! 👋 I'm Aditya's AI assistant. I can tell you about Aditya's skills, experience, projects, and more. What would you like to know?\",isUser:false,timestamp:new Date()};setMessages([welcomeMessage]);}},[isOpen,messages.length]);// Simple pattern-matching responses for the chatbot\nconst getResponse=message=>{const lowerMessage=message.toLowerCase();// Personal information\nif(lowerMessage.includes('who is aditya')||lowerMessage.includes('about aditya')||lowerMessage.includes('who are you')){return\"I'm Aditya Kumar, a passionate software developer and tech enthusiast! I'm currently working as CTO at Gromo and have experience with full-stack development, AI/ML, and modern web technologies. I love building innovative solutions and contributing to the tech community.\";}// Technical skills\nif(lowerMessage.includes('technical skills')||lowerMessage.includes('skills')||lowerMessage.includes('technologies')){return\"My technical skills include:\\n\\n🔧 **Frontend:** React, Next.js, TypeScript, Tailwind CSS, JavaScript\\n💻 **Backend:** Node.js, Python, Express.js, REST APIs\\n🗄️ **Databases:** MongoDB, PostgreSQL, MySQL\\n☁️ **Cloud & DevOps:** AWS, Docker, Git, GitHub Actions\\n🤖 **AI/ML:** Machine Learning, Deep Learning, TensorFlow\\n\\nI'm always learning new technologies to stay current with industry trends!\";}// Projects\nif(lowerMessage.includes('projects')||lowerMessage.includes('work')||lowerMessage.includes('portfolio')){return\"I've worked on various exciting projects:\\n\\n🚀 **At Gromo:** Leading technical initiatives and building scalable solutions\\n🏢 **L&T Internship:** Gained valuable industry experience as an SDE Intern\\n🤖 **AI Projects:** Working on innovative AI solutions at SarvamAI\\n🌐 **Web Development:** Built multiple full-stack applications with modern frameworks\\n\\nEach project has helped me grow as a developer and solve real-world problems!\";}// Contact information\nif(lowerMessage.includes('contact')||lowerMessage.includes('reach')||lowerMessage.includes('email')||lowerMessage.includes('linkedin')){return\"You can reach out to me through:\\n\\n📧 **Email:** Contact form on this website\\n🔗 **LinkedIn:** Check my LinkedIn profile\\n🐙 **GitHub:** github.com/adityadhimaann\\n📸 **Instagram:** @adityadhimaann\\n💼 **Fiverr:** Available for freelance projects\\n\\nI'm always open to discussing new opportunities and collaborations!\";}// Experience/Career\nif(lowerMessage.includes('experience')||lowerMessage.includes('career')||lowerMessage.includes('work experience')){return\"My professional journey includes:\\n\\n🎯 **Current:** CTO at Gromo (AWS Finarva AI 2025)\\n🏗️ **Previous:** SDE Intern at Larsen & Toubro\\n🤖 **AI Work:** Building innovative solutions at SarvamAI\\n🌐 **Community:** Active in Google Cloud Developers community (GDG Noida)\\n\\nI'm passionate about leveraging technology to solve complex problems and lead technical teams!\";}// Education\nif(lowerMessage.includes('education')||lowerMessage.includes('study')||lowerMessage.includes('university')||lowerMessage.includes('college')){return\"I'm always learning and growing! My educational background focuses on computer science and software engineering. I believe in continuous learning and stay updated with the latest technologies through online courses, certifications, and hands-on projects.\";}// Location\nif(lowerMessage.includes('location')||lowerMessage.includes('where')||lowerMessage.includes('based')){return\"I'm based in Lucknow, Uttar Pradesh, India. I work both locally and remotely with teams across different time zones. I'm also available for travel when projects require it!\";}// Greetings\nif(lowerMessage.includes('hello')||lowerMessage.includes('hi')||lowerMessage.includes('hey')){return\"Hello! 👋 Welcome to my portfolio! I'm excited to chat with you. Feel free to ask me anything about my background, skills, projects, or experience. How can I help you today?\";}// Thanks\nif(lowerMessage.includes('thank')||lowerMessage.includes('thanks')){return\"You're very welcome! 😊 I'm glad I could help. If you have any other questions about my work, skills, or experience, feel free to ask. I'm here to help!\";}// Hiring/Opportunities\nif(lowerMessage.includes('hire')||lowerMessage.includes('opportunity')||lowerMessage.includes('job')||lowerMessage.includes('available')){return\"I'm always interested in exciting opportunities! 🚀 Whether it's full-time positions, consulting, or collaboration on innovative projects, I'd love to discuss how we can work together. Please use the contact form on this website to reach out with details about the opportunity.\";}// Default response\nreturn\"That's an interesting question! While I'd love to chat more, I'm a simple chatbot focused on sharing information about Aditya Kumar. Try asking me about:\\n\\n• Technical skills and expertise\\n• Professional experience and projects\\n• Contact information\\n• Educational background\\n• Career opportunities\\n\\nWhat would you like to know? 😊\";};const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);useEffect(()=>{if(isOpen&&inputRef.current){inputRef.current.focus();}},[isOpen]);const formatTime=date=>{return date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});};const sendMessage=async messageText=>{const textToSend=messageText||inputMessage.trim();if(!textToSend||isLoading)return;const newMessage={id:Date.now().toString(),text:textToSend,isUser:true,timestamp:new Date()};setMessages(prev=>[...prev,newMessage]);setInputMessage('');setIsLoading(true);try{// Simulate a natural delay for better UX\nawait new Promise(resolve=>setTimeout(resolve,500+Math.random()*1000));const response=getResponse(textToSend);const botMessage={id:(Date.now()+1).toString(),text:response,isUser:false,timestamp:new Date()};setMessages(prev=>[...prev,botMessage]);setIsLoading(false);}catch(error){console.error('Error getting response:',error);const errorMessage={id:(Date.now()+1).toString(),text:\"I'm sorry, I'm having trouble responding right now. Please try asking about my skills, experience, or projects!\",isUser:false,timestamp:new Date()};setMessages(prev=>[...prev,errorMessage]);setIsLoading(false);}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();sendMessage();}};const handleQuickAction=action=>{sendMessage(action);};const quickActions=[\"Who is Aditya?\",\"Technical skills\",\"Projects\",\"Contact info\"];return/*#__PURE__*/_jsxs(ChatbotPortal,{children:[/*#__PURE__*/_jsx(GlobalStyle,{}),/*#__PURE__*/_jsxs(ChatWidget,{isOpen:isOpen,children:[/*#__PURE__*/_jsx(ChatToggle,{isOpen:isOpen,onClick:()=>setIsOpen(!isOpen),\"aria-label\":isOpen?\"Close chat\":\"Open chat\",children:isOpen?'×':'💬'}),isOpen&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ChatHeader,{children:[/*#__PURE__*/_jsx(AvatarContainer,{children:\"\\uD83E\\uDD16\"}),/*#__PURE__*/_jsxs(HeaderInfo,{children:[/*#__PURE__*/_jsx(BotName,{children:\"AdiDev Assistant\"}),/*#__PURE__*/_jsxs(BotStatus,{children:[/*#__PURE__*/_jsx(StatusDot,{}),\"Online\"]})]})]}),/*#__PURE__*/_jsxs(MessagesContainer,{children:[messages.length===0&&/*#__PURE__*/_jsxs(WelcomeMessage,{children:[/*#__PURE__*/_jsx(WelcomeTitle,{children:\"\\uD83D\\uDC4B Hello! I'm AdiDev\"}),/*#__PURE__*/_jsx(WelcomeText,{children:\"I'm here to help you learn about Aditya Kumar's background, skills, and projects. Ask me anything or try one of these:\"}),/*#__PURE__*/_jsx(QuickActions,{children:quickActions.map((action,index)=>/*#__PURE__*/_jsx(QuickActionButton,{onClick:()=>handleQuickAction(action),children:action},index))})]}),messages.map(message=>/*#__PURE__*/_jsx(MessageGroup,{isUser:message.isUser,children:/*#__PURE__*/_jsxs(MessageBubble,{isUser:message.isUser,children:[message.text,/*#__PURE__*/_jsx(MessageTime,{children:formatTime(message.timestamp)})]})},message.id)),isLoading&&/*#__PURE__*/_jsx(MessageGroup,{isUser:false,children:/*#__PURE__*/_jsxs(TypingIndicator,{children:[/*#__PURE__*/_jsx(TypingDot,{delay:0}),/*#__PURE__*/_jsx(TypingDot,{delay:200}),/*#__PURE__*/_jsx(TypingDot,{delay:400})]})}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(InputContainer,{children:/*#__PURE__*/_jsxs(InputWrapper,{children:[/*#__PURE__*/_jsx(MessageInput,{ref:inputRef,value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Ask anything about Aditya...\",rows:1,disabled:isLoading}),/*#__PURE__*/_jsx(SendButton,{onClick:()=>sendMessage(),disabled:!inputMessage.trim()||isLoading,\"aria-label\":\"Send message\",children:\"\\u27A4\"})]})})]})]})]});};export default EnhancedChatbot;","map":{"version":3,"names":["React","useState","useRef","useEffect","createPortal","styled","keyframes","createGlobalStyle","css","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GlobalStyle","_templateObject","_taggedTemplateLiteral","fadeIn","_templateObject2","bounce","_templateObject3","typing","_templateObject4","ChatWidget","div","withConfig","shouldForwardProp","prop","_templateObject5","props","isOpen","_templateObject6","ChatToggle","button","_templateObject7","_templateObject8","ChatHeader","_templateObject9","AvatarContainer","_templateObject0","HeaderInfo","_templateObject1","BotName","_templateObject10","BotStatus","_templateObject11","StatusDot","_templateObject12","MessagesContainer","_templateObject13","MessageGroup","_templateObject14","isUser","MessageBubble","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","MessageTime","span","_templateObject20","TypingIndicator","_templateObject21","TypingDot","_templateObject22","delay","InputContainer","_templateObject23","InputWrapper","_templateObject24","MessageInput","textarea","_templateObject25","SendButton","_templateObject26","WelcomeMessage","_templateObject27","WelcomeTitle","h4","_templateObject28","WelcomeText","p","_templateObject29","QuickActions","_templateObject30","QuickActionButton","_templateObject31","ChatbotPortal","_ref","children","portalNode","setPortalNode","node","document","getElementById","createElement","id","style","position","zIndex","pointerEvents","top","left","width","height","overflow","body","appendChild","parentNode","removeChild","EnhancedChatbot","setIsOpen","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","messagesEndRef","inputRef","length","welcomeMessage","text","timestamp","Date","getResponse","message","lowerMessage","toLowerCase","includes","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","focus","formatTime","date","toLocaleTimeString","hour","minute","sendMessage","messageText","textToSend","trim","newMessage","now","toString","prev","Promise","resolve","setTimeout","Math","random","response","botMessage","error","console","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","handleQuickAction","action","quickActions","onClick","map","index","ref","value","onChange","target","onKeyPress","placeholder","rows","disabled"],"sources":["/Users/aditya/newport/portfolionew/src/components/EnhancedChatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styled, { keyframes, createGlobalStyle, css } from 'styled-components';\n\n// Global styles for the chatbot\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n`;\n\n// Animations\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst bounce = keyframes`\n  0%, 20%, 53%, 80%, 100% { transform: translate3d(0,0,0); }\n  40%, 43% { transform: translate3d(0, -8px, 0); }\n  70% { transform: translate3d(0, -4px, 0); }\n  90% { transform: translate3d(0, -2px, 0); }\n`;\n\nconst typing = keyframes`\n  0% { transform: translateX(0px); }\n  50% { transform: translateX(10px); }\n  100% { transform: translateX(0px); }\n`;\n\n// Main container - can be positioned anywhere on a website\nconst ChatWidget = styled.div.withConfig({\n  shouldForwardProp: (prop) => prop !== 'isOpen',\n})`\n  position: fixed !important;\n  bottom: 20px !important;\n  right: 20px !important;\n  width: ${props => props.isOpen ? '400px' : '60px'};\n  height: ${props => props.isOpen ? '600px' : '60px'};\n  background: #ffffff;\n  border-radius: ${props => props.isOpen ? '20px' : '50%'};\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\n  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  z-index: 999999 !important;\n  top: auto !important;\n  left: auto !important;\n  transform: none !important;\n  margin: 0 !important;\n  padding: 0 !important;\n  opacity: 1 !important;\n  visibility: visible !important;\n  overflow: visible !important;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(20px);\n  display: flex;\n  flex-direction: column;\n  transform: translateZ(0) !important;\n  will-change: transform;\n  isolation: isolate;\n  clip: unset !important;\n  clip-path: none !important;\n  contain: none !important;\n  max-width: calc(100vw - 40px) !important;\n  max-height: calc(100vh - 40px) !important;\n  pointer-events: auto !important;\n\n  ${props => props.isOpen && css`\n    box-shadow: \n      0 8px 32px rgba(0, 0, 0, 0.12),\n      0 0 0 1px rgba(99, 102, 241, 0.1),\n      inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  `}\n\n  @media (max-width: 768px) {\n    width: ${props => props.isOpen ? 'calc(100vw - 30px)' : '60px'};\n    max-width: 350px;\n    height: ${props => props.isOpen ? 'calc(100vh - 100px)' : '60px'};\n    max-height: 500px;\n    bottom: 15px;\n    right: 15px;\n    left: ${props => props.isOpen ? '15px' : 'auto'};\n  }\n\n  @media (max-width: 480px) {\n    width: ${props => props.isOpen ? 'calc(100vw - 20px)' : '50px'};\n    height: ${props => props.isOpen ? 'calc(100vh - 80px)' : '50px'};\n    bottom: 10px;\n    right: 10px;\n    left: ${props => props.isOpen ? '10px' : 'auto'};\n  }\n`;\n\n// Chat toggle button\nconst ChatToggle = styled.button.withConfig({\n  shouldForwardProp: (prop) => prop !== 'isOpen',\n})`\n  position: absolute;\n  top: ${props => props.isOpen ? '15px' : '10px'};\n  right: ${props => props.isOpen ? '15px' : '10px'};\n  width: ${props => props.isOpen ? '30px' : '40px'};\n  height: ${props => props.isOpen ? '30px' : '40px'};\n  border: none;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #6366f1, #8b5cf6);\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${props => props.isOpen ? '18px' : '24px'};\n  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  z-index: 10000;\n  box-shadow: 0 4px 16px rgba(99, 102, 241, 0.4);\n\n  &:hover {\n    background: linear-gradient(135deg, #5855f7, #7c3aed);\n    transform: scale(1.1);\n    box-shadow: 0 6px 20px rgba(99, 102, 241, 0.5);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  ${props => !props.isOpen && css`\n    animation: ${bounce} 2s infinite;\n    &:hover {\n      animation-play-state: paused;\n    }\n  `}\n`;\n\n// Chat header\nconst ChatHeader = styled.div`\n  background: linear-gradient(135deg, #6366f1, #8b5cf6);\n  color: white;\n  padding: 20px 20px 20px 20px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-top: 45px;\n  position: relative;\n  flex-shrink: 0;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(135deg, rgba(255,255,255,0.1), rgba(255,255,255,0));\n    pointer-events: none;\n  }\n`;\n\nconst AvatarContainer = styled.div`\n  width: 45px;\n  height: 45px;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  backdrop-filter: blur(10px);\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  position: relative;\n  z-index: 1;\n`;\n\nconst HeaderInfo = styled.div`\n  flex: 1;\n  position: relative;\n  z-index: 1;\n`;\n\nconst BotName = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  margin-bottom: 2px;\n`;\n\nconst BotStatus = styled.div`\n  font-size: 12px;\n  opacity: 0.9;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n\nconst StatusDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #10b981;\n  animation: pulse 2s infinite;\n  \n  @keyframes pulse {\n    0% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7); }\n    70% { box-shadow: 0 0 0 10px rgba(16, 185, 129, 0); }\n    100% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0); }\n  }\n`;\n\n// Messages container\nconst MessagesContainer = styled.div`\n  flex: 1;\n  padding: 15px;\n  overflow-y: auto;\n  background: linear-gradient(135deg, #f8fafc, #f1f5f9);\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.05);\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(99, 102, 241, 0.3);\n    border-radius: 3px;\n    \n    &:hover {\n      background: rgba(99, 102, 241, 0.5);\n    }\n  }\n`;\n\nconst MessageGroup = styled.div.withConfig({\n  shouldForwardProp: (prop) => prop !== 'isUser',\n})`\n  display: flex;\n  justify-content: ${props => props.isUser ? 'flex-end' : 'flex-start'};\n  margin-bottom: 12px;\n  animation: ${fadeIn} 0.3s ease;\n`;\n\nconst MessageBubble = styled.div.withConfig({\n  shouldForwardProp: (prop) => prop !== 'isUser',\n})`\n  max-width: 75%;\n  padding: 12px 16px;\n  border-radius: 18px;\n  font-size: 14px;\n  line-height: 1.4;\n  position: relative;\n  word-wrap: break-word;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  transition: all 0.2s ease;\n\n  ${props => props.isUser\n    ? css`\n        background: linear-gradient(135deg, #6366f1, #8b5cf6);\n        color: white;\n        box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);\n      `\n    : css`\n        background: #ffffff;\n        color: #374151;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n      `\n  }\n\n  /* Chat bubble tail */\n  &::before {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    border: 6px solid transparent;\n    \n    ${props => props.isUser\n      ? css`\n        right: -6px;\n        top: 50%;\n        transform: translateY(-50%);\n        border-left-color: #6366f1;\n      `\n      : css`\n        left: -6px;\n        top: 50%;\n        transform: translateY(-50%);\n        border-right-color: #ffffff;\n      `\n    }\n  }\n\n  /* Hover effect for interactive feel */\n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: ${props => props.isUser \n      ? '0 6px 16px rgba(99, 102, 241, 0.3)' \n      : '0 4px 12px rgba(0, 0, 0, 0.12)'};\n  }\n`;\n\nconst MessageTime = styled.span`\n  font-size: 11px;\n  opacity: 0.6;\n  margin-top: 4px;\n  display: block;\n`;\n\n// Typing indicator\nconst TypingIndicator = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 16px;\n  background: #ffffff;\n  border-radius: 18px;\n  max-width: 80px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n  border: 1px solid #e5e7eb;\n  animation: ${fadeIn} 0.3s ease;\n`;\n\nconst TypingDot = styled.div.withConfig({\n  shouldForwardProp: (prop) => prop !== 'delay',\n})`\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background: #6b7280;\n  animation: ${typing} 1.4s infinite ease-in-out;\n  animation-delay: ${props => props.delay}ms;\n`;\n\n// Input area\nconst InputContainer = styled.div`\n  padding: 15px 20px 20px;\n  background: white;\n  border-top: 1px solid #e5e7eb;\n  flex-shrink: 0;\n  position: relative;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: flex-end;\n`;\n\nconst MessageInput = styled.textarea`\n  flex: 1;\n  border: 1px solid #d1d5db;\n  border-radius: 20px;\n  padding: 12px 16px;\n  font-size: 14px;\n  line-height: 1.4;\n  resize: none;\n  max-height: 80px;\n  min-height: 44px;\n  background: #f9fafb;\n  transition: all 0.2s ease;\n  font-family: inherit;\n\n  &:focus {\n    outline: none;\n    border-color: #6366f1;\n    background: white;\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n\n  &::placeholder {\n    color: #9ca3af;\n    font-style: italic;\n  }\n`;\n\nconst SendButton = styled.button`\n  width: 44px;\n  height: 44px;\n  border: none;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #6366f1, #8b5cf6);\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n  box-shadow: 0 2px 8px rgba(99, 102, 241, 0.3);\n\n  &:hover:not(:disabled) {\n    background: linear-gradient(135deg, #5855f7, #7c3aed);\n    transform: scale(1.05);\n    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: 0 2px 8px rgba(99, 102, 241, 0.2);\n  }\n`;\n\n// Welcome message\nconst WelcomeMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: #6b7280;\n  background: linear-gradient(135deg, rgba(99, 102, 241, 0.05), rgba(139, 92, 246, 0.05));\n  border-radius: 15px;\n  margin: 10px;\n  border: 1px solid rgba(99, 102, 241, 0.1);\n`;\n\nconst WelcomeTitle = styled.h4`\n  margin: 0 0 8px 0;\n  color: #374151;\n  font-size: 16px;\n`;\n\nconst WelcomeText = styled.p`\n  margin: 0;\n  font-size: 13px;\n  line-height: 1.4;\n`;\n\nconst QuickActions = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-top: 12px;\n`;\n\nconst QuickActionButton = styled.button`\n  background: linear-gradient(135deg, #f8fafc, #e2e8f0);\n  border: 1px solid #d1d5db;\n  border-radius: 16px;\n  padding: 8px 16px;\n  font-size: 12px;\n  color: #374151;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-weight: 500;\n\n  &:hover {\n    background: linear-gradient(135deg, #6366f1, #8b5cf6);\n    color: white;\n    border-color: #6366f1;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);\n  }\n`;\n\n// Portal container for the chat widget\nconst ChatbotPortal = ({ children }) => {\n  const [portalNode, setPortalNode] = useState(null);\n\n  useEffect(() => {\n    // Create a new div element for the portal\n    let node = document.getElementById('chatbot-root');\n    \n    if (!node) {\n      node = document.createElement('div');\n      node.id = 'chatbot-root';\n      node.style.position = 'fixed';\n      node.style.zIndex = '999999';\n      node.style.pointerEvents = 'none';\n      node.style.top = '0';\n      node.style.left = '0';\n      node.style.width = '100%';\n      node.style.height = '100%';\n      node.style.overflow = 'visible';\n      document.body.appendChild(node);\n    }\n    \n    setPortalNode(node);\n    \n    // Clean up function\n    return () => {\n      if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    };\n  }, []);\n\n  // Only render when we have a valid portal node\n  return portalNode ? createPortal(children, portalNode) : null;\n};\n\nconst EnhancedChatbot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Add welcome message when chatbot first opens\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      const welcomeMessage = {\n        id: 'welcome',\n        text: \"Hi there! 👋 I'm Aditya's AI assistant. I can tell you about Aditya's skills, experience, projects, and more. What would you like to know?\",\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages([welcomeMessage]);\n    }\n  }, [isOpen, messages.length]);\n\n  // Simple pattern-matching responses for the chatbot\n  const getResponse = (message) => {\n    const lowerMessage = message.toLowerCase();\n    \n    // Personal information\n    if (lowerMessage.includes('who is aditya') || lowerMessage.includes('about aditya') || lowerMessage.includes('who are you')) {\n      return \"I'm Aditya Kumar, a passionate software developer and tech enthusiast! I'm currently working as CTO at Gromo and have experience with full-stack development, AI/ML, and modern web technologies. I love building innovative solutions and contributing to the tech community.\";\n    }\n    \n    // Technical skills\n    if (lowerMessage.includes('technical skills') || lowerMessage.includes('skills') || lowerMessage.includes('technologies')) {\n      return \"My technical skills include:\\n\\n🔧 **Frontend:** React, Next.js, TypeScript, Tailwind CSS, JavaScript\\n💻 **Backend:** Node.js, Python, Express.js, REST APIs\\n🗄️ **Databases:** MongoDB, PostgreSQL, MySQL\\n☁️ **Cloud & DevOps:** AWS, Docker, Git, GitHub Actions\\n🤖 **AI/ML:** Machine Learning, Deep Learning, TensorFlow\\n\\nI'm always learning new technologies to stay current with industry trends!\";\n    }\n    \n    // Projects\n    if (lowerMessage.includes('projects') || lowerMessage.includes('work') || lowerMessage.includes('portfolio')) {\n      return \"I've worked on various exciting projects:\\n\\n🚀 **At Gromo:** Leading technical initiatives and building scalable solutions\\n🏢 **L&T Internship:** Gained valuable industry experience as an SDE Intern\\n🤖 **AI Projects:** Working on innovative AI solutions at SarvamAI\\n🌐 **Web Development:** Built multiple full-stack applications with modern frameworks\\n\\nEach project has helped me grow as a developer and solve real-world problems!\";\n    }\n    \n    // Contact information\n    if (lowerMessage.includes('contact') || lowerMessage.includes('reach') || lowerMessage.includes('email') || lowerMessage.includes('linkedin')) {\n      return \"You can reach out to me through:\\n\\n📧 **Email:** Contact form on this website\\n🔗 **LinkedIn:** Check my LinkedIn profile\\n🐙 **GitHub:** github.com/adityadhimaann\\n📸 **Instagram:** @adityadhimaann\\n💼 **Fiverr:** Available for freelance projects\\n\\nI'm always open to discussing new opportunities and collaborations!\";\n    }\n    \n    // Experience/Career\n    if (lowerMessage.includes('experience') || lowerMessage.includes('career') || lowerMessage.includes('work experience')) {\n      return \"My professional journey includes:\\n\\n🎯 **Current:** CTO at Gromo (AWS Finarva AI 2025)\\n🏗️ **Previous:** SDE Intern at Larsen & Toubro\\n🤖 **AI Work:** Building innovative solutions at SarvamAI\\n🌐 **Community:** Active in Google Cloud Developers community (GDG Noida)\\n\\nI'm passionate about leveraging technology to solve complex problems and lead technical teams!\";\n    }\n    \n    // Education\n    if (lowerMessage.includes('education') || lowerMessage.includes('study') || lowerMessage.includes('university') || lowerMessage.includes('college')) {\n      return \"I'm always learning and growing! My educational background focuses on computer science and software engineering. I believe in continuous learning and stay updated with the latest technologies through online courses, certifications, and hands-on projects.\";\n    }\n    \n    // Location\n    if (lowerMessage.includes('location') || lowerMessage.includes('where') || lowerMessage.includes('based')) {\n      return \"I'm based in Lucknow, Uttar Pradesh, India. I work both locally and remotely with teams across different time zones. I'm also available for travel when projects require it!\";\n    }\n    \n    // Greetings\n    if (lowerMessage.includes('hello') || lowerMessage.includes('hi') || lowerMessage.includes('hey')) {\n      return \"Hello! 👋 Welcome to my portfolio! I'm excited to chat with you. Feel free to ask me anything about my background, skills, projects, or experience. How can I help you today?\";\n    }\n    \n    // Thanks\n    if (lowerMessage.includes('thank') || lowerMessage.includes('thanks')) {\n      return \"You're very welcome! 😊 I'm glad I could help. If you have any other questions about my work, skills, or experience, feel free to ask. I'm here to help!\";\n    }\n    \n    // Hiring/Opportunities\n    if (lowerMessage.includes('hire') || lowerMessage.includes('opportunity') || lowerMessage.includes('job') || lowerMessage.includes('available')) {\n      return \"I'm always interested in exciting opportunities! 🚀 Whether it's full-time positions, consulting, or collaboration on innovative projects, I'd love to discuss how we can work together. Please use the contact form on this website to reach out with details about the opportunity.\";\n    }\n    \n    // Default response\n    return \"That's an interesting question! While I'd love to chat more, I'm a simple chatbot focused on sharing information about Aditya Kumar. Try asking me about:\\n\\n• Technical skills and expertise\\n• Professional experience and projects\\n• Contact information\\n• Educational background\\n• Career opportunities\\n\\nWhat would you like to know? 😊\";\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isOpen]);\n\n  const formatTime = (date) => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const sendMessage = async (messageText) => {\n    const textToSend = messageText || inputMessage.trim();\n    if (!textToSend || isLoading) return;\n\n    const newMessage = {\n      id: Date.now().toString(),\n      text: textToSend,\n      isUser: true,\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, newMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      // Simulate a natural delay for better UX\n      await new Promise(resolve => setTimeout(resolve, 500 + Math.random() * 1000));\n      \n      const response = getResponse(textToSend);\n      \n      const botMessage = {\n        id: (Date.now() + 1).toString(),\n        text: response,\n        isUser: false,\n        timestamp: new Date(),\n      };\n\n      setMessages(prev => [...prev, botMessage]);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error getting response:', error);\n      const errorMessage = {\n        id: (Date.now() + 1).toString(),\n        text: \"I'm sorry, I'm having trouble responding right now. Please try asking about my skills, experience, or projects!\",\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  const handleQuickAction = (action) => {\n    sendMessage(action);\n  };\n\n  const quickActions = [\n    \"Who is Aditya?\",\n    \"Technical skills\",\n    \"Projects\",\n    \"Contact info\"\n  ];\n\n  return (\n    <ChatbotPortal>\n      <GlobalStyle />\n      <ChatWidget isOpen={isOpen}>\n        <ChatToggle \n          isOpen={isOpen} \n          onClick={() => setIsOpen(!isOpen)}\n          aria-label={isOpen ? \"Close chat\" : \"Open chat\"}\n        >\n          {isOpen ? '×' : '💬'}\n        </ChatToggle>\n\n        {isOpen && (\n          <>\n            <ChatHeader>\n              <AvatarContainer>\n                🤖\n              </AvatarContainer>\n              <HeaderInfo>\n                <BotName>AdiDev Assistant</BotName>\n                <BotStatus>\n                  <StatusDot />\n                  Online\n                </BotStatus>\n              </HeaderInfo>\n            </ChatHeader>\n\n            <MessagesContainer>\n              {messages.length === 0 && (\n                <WelcomeMessage>\n                  <WelcomeTitle>👋 Hello! I'm AdiDev</WelcomeTitle>\n                  <WelcomeText>\n                    I'm here to help you learn about Aditya Kumar's background, skills, and projects. \n                    Ask me anything or try one of these:\n                  </WelcomeText>\n                  <QuickActions>\n                    {quickActions.map((action, index) => (\n                      <QuickActionButton\n                        key={index}\n                        onClick={() => handleQuickAction(action)}\n                      >\n                        {action}\n                      </QuickActionButton>\n                    ))}\n                  </QuickActions>\n                </WelcomeMessage>\n              )}\n\n              {messages.map((message) => (\n                <MessageGroup key={message.id} isUser={message.isUser}>\n                  <MessageBubble isUser={message.isUser}>\n                    {message.text}\n                    <MessageTime>\n                      {formatTime(message.timestamp)}\n                    </MessageTime>\n                  </MessageBubble>\n                </MessageGroup>\n              ))}\n\n              {isLoading && (\n                <MessageGroup isUser={false}>\n                  <TypingIndicator>\n                    <TypingDot delay={0} />\n                    <TypingDot delay={200} />\n                    <TypingDot delay={400} />\n                  </TypingIndicator>\n                </MessageGroup>\n              )}\n\n              <div ref={messagesEndRef} />\n            </MessagesContainer>\n\n            <InputContainer>\n              <InputWrapper>\n                <MessageInput\n                  ref={inputRef}\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Ask anything about Aditya...\"\n                  rows={1}\n                  disabled={isLoading}\n                />\n                <SendButton \n                  onClick={() => sendMessage()}\n                  disabled={!inputMessage.trim() || isLoading}\n                  aria-label=\"Send message\"\n                >\n                  ➤\n                </SendButton>\n              </InputWrapper>\n            </InputContainer>\n          </>\n        )}\n      </ChatWidget>\n    </ChatbotPortal>\n  );\n};\n\nexport default EnhancedChatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}